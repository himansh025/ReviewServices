package com.example.uber.services;import com.example.uber.models.Booking;import com.example.uber.models.Driver;import com.example.uber.repositories.BookingRepository;import com.example.uber.repositories.DriverRepository;import org.springframework.boot.CommandLineRunner;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import java.util.*;@Servicepublic class ReviewService implements CommandLineRunner {    private final DriverRepository driverRepository;    private final BookingRepository bookingRepository;    //    public ReviewService(DriverRepository driverRepository, BookingRepository bookingRepository) {        this.driverRepository = driverRepository;        this.bookingRepository = bookingRepository;    }    @Override    @Transactional    public void run(String... args) throws Exception {        findDriverBookings();    }    public void findDriverBookings() {        List<Long> driverIds = new ArrayList<>(Arrays.asList(1L, 2L, 3L, 4L, 5L, 6L));        List<Driver> drivers = driverRepository.findAllByIdIn(driverIds);//        spring hibernate provide fetch SubSelect select query inside select which solve n+1 problem        for (Driver driver : drivers) {            List<Booking> bookings = driver.getBookings();            bookings.forEach(booking -> System.out.println(booking.getId()));        }        //        manually fetch the booking of the drivers ////        List<Booking>bookings1= bookingRepository.findAllByDriverIn(drivers);//       for(Booking booking:bookings1){//            System.out.println("booking running");//            System.out.println(booking.getId());//        }    }}